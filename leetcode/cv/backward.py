
def backward(Y1, XX, L, Y2, layer_out, E1, E2, W1, W2, theta1, theta2, a):
    y_1_1 = layer_out[0][0]
    y_1_2 = layer_out[0][1]
    y_2_1 = layer_out[1][0]
    y_2_2 = layer_out[1][1]
    for j in range(2000):
        print("\n\n轮：", j)
        E = 0.0
        for i in range(4):
            print("样本：", i)
            print("实例：", XX[i])
            print("标签", L[i])
            ### 前向传播预测
            # 计算第1隐层的输出
            Y1[0] = y_1_1(W1, theta1, XX[i])
            Y1[1] = y_1_2(W1, theta1, XX[i])
            # print("第1隐层的输出:", Y1)

            # 计算第2隐层的输出
            Y2[0] = y_2_1(W2, theta2, Y1)
            Y2[1] = y_2_2(W2, theta2, Y1)
            print("第2隐层的输出:", Y2)

            ### 后向传播误差
            # 计算第2隐层的校对误差
            E2[0] = Y2[0] - L[i][0]
            E2[1] = Y2[1] - L[i][1]
            E += 0.5 * (E2[0] * E2[0] + E2[1] * E2[1])

            # 计算第1隐层的校对误差
            E1[0] = E2[0] * Y2[0] * (1 - Y2[0]) * W2[0, 0] + E2[1] * Y2[1] * (1 - Y2[1]) * W2[0, 1]
            E1[1] = E2[0] * Y2[0] * (1 - Y2[0]) * W2[1, 0] + E2[1] * Y2[1] * (1 - Y2[1]) * W2[1, 1]

            ### 更新系数
            # 更新第2隐层的系数
            W2[0, 0] = W2[0, 0] - a * E2[0] * Y2[0] * (1 - Y2[0]) * Y1[0]
            W2[1, 0] = W2[1, 0] - a * E2[0] * Y2[0] * (1 - Y2[0]) * Y1[1]
            theta2[0] = theta2[0] - a * E2[0] * Y2[0] * (1 - Y2[0])
            W2[0, 1] = W2[0, 1] - a * E2[1] * Y2[1] * (1 - Y2[1]) * Y1[0]
            W2[1, 1] = W2[1, 1] - a * E2[1] * Y2[1] * (1 - Y2[1]) * Y1[1]
            theta2[1] = theta2[1] - a * E2[1] * Y2[1] * (1 - Y2[1])

            # 更新第1隐层的系数
            W1[0, 0] = W1[0, 0] - a * E1[0] * Y1[0] * (1 - Y1[0]) * XX[i][0]
            W1[1, 0] = W1[1, 0] - a * E1[0] * Y1[0] * (1 - Y1[0]) * XX[i][1]
            theta1[0] = theta1[0] - a * E1[0] * Y1[0] * (1 - Y1[0])
            W1[0, 1] = W1[0, 1] - a * E1[1] * Y1[1] * (1 - Y1[1]) * XX[i][0]
            W1[1, 1] = W1[1, 1] - a * E1[1] * Y1[1] * (1 - Y1[1]) * XX[i][1]
            theta1[1] = theta1[1] - a * E1[1] * Y1[1] * (1 - Y1[1])